Automatically generated by Mendeley Desktop 1.19.8
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

@misc{YoctoProj,
author = {Projekt, Yocto},
file = {:home/landry/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/c90cfb503e7aa4aa3a19a7a44e7e2d397697eeca.html:html},
title = {{Yocto Project Documentation}},
url = {https://www.yoctoproject.org/docs/latest/dev-manual/dev-manual.html}
}
@book{Crockett:2001018,
author = {{Crockett, Louise H and Elliot, Ross A and Enderwitz, Martin A and Stewart}, Robert W},
publisher = {Strathclyde Academic Media},
title = {{The ZYNQ book: embedded processing with the ARM Cortex-A9 on the Xilinx Zynq-7000 all programmable SoC}},
url = {https://cds.cern.ch/record/2001018},
year = {2014}
}
@article{Transmission2018,
author = {Transmission, Message and Reception, Message and Objects, Mask and Features, Special},
file = {:home/landry/Dokumente/Mein_BA/Landry_Dokumente/Projekt_Edag/Erste_aufgabe/MCP2517FD-External-CAN-FD-Controller-with-SPI-Interface-20005688B.pdf:pdf},
keywords = {CAN
CAN FD
External CAN FD Controller
ISO CRC},
title = {{Mcp2517Fd Mcp2517Fd}},
year = {2018}
}
@misc{zcuboard.,
author = {{Xilinx Inc.}},
file = {:home/landry/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/9f9cd64c6316cd6a9455798e6d0f9943c46660c8.html:html},
title = {{Xilinx zcu106 Evaluation Board}},
url = {https://www.xilinx.com/products/boards-and-kits/zcu106.html}
}
@article{Xilinx2017,
author = {UG1137},
file = {:home/landry/Dokumente/Mein_BA/Thesis/Literatur/ug1137-zynq-ultrascale-mpsoc-swdev.pdf:pdf},
journal = {User guide},
pages = {1--268},
title = {{Zynq UltraScale}},
url = {https://www.xilinx.com/support/documentation/user_guides/ug1137-zynq-ultrascale-mpsoc-swdev.pdf},
volume = {1137},
year = {2017}
}
@misc{kernel,
author = {Linux-kernel},
file = {:home/landry/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/a1380a704db4026f1bc3fd4a5d09a21cc83b3e3a.10:10},
title = {{ChangeLog-5 @ mirrors.edge.kernel.org}},
url = {https://mirrors.edge.kernel.org/pub/linux/kernel/v5.x/ChangeLog-5.10}
}
@article{Bosch1991,
abstract = {The acceptance and introduction of serial communication to more and more applications has led to requirements that the assignment of message identifiers to communication functions be standardized for certain applications. These applications can be realized with CAN more comfortably, if the address range that originally has been defined by 11 identifier bits is enlarged Therefore a second message format ('extended format') is introduced that provides a larger address range defined by 29 bits. This will relieve the system designer from compromises with respect to defining well-structured naming schemes. Users of CAN who do not need the identifier range offered by the extended format, can rely on the conventional 11 bit identifier range ('standard format') further on. In this case they can make use of the CAN implementations that are already available on the market, or of new controllers that implement both formats. In order to distinguish standard and extended format the first reserved bit of the CAN message format, as it is defined in CAN Specification 1.2, is used. This is done in such a way that the message format in CAN Specification 1.2 is equivalent to the standard format and therefore is still valid. Furthermore, the extended format has been defined so that messages in standard format and extended format can coexist within the same network. This CAN Specification consists of two parts, with • Part A describing the CAN message format as it is defined in CAN Specification 1.2; • Part B describing both standard and extended message formats. In order to be compatible with this CAN Specification 2.0 it is required that a CAN implementation be compatible with either Part A or Part B.},
author = {Bosch, Robert},
file = {:home/landry/Dokumente/Mein_BA/Thesis/Literatur/can20.pdf:pdf},
journal = {Rober Bousch GmbH, Postfach},
pages = {72},
title = {{CAN Specification Version 2.0}},
url = {http://esd.cs.ucr.edu/webres/can20.pdf},
volume = {300240},
year = {1991}
}
@misc{toolchains,
author = {Linux-toolchains},
file = {:home/landry/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/9f852300e30f9d3ed8b03c7d7d222369cc4ba599.html:html},
keywords = {Toolchains},
title = {{Toolchains - eLinux.org}},
url = {http://elinux.org/Toolchains}
}
@article{Xilinx2020,
author = {Petalinux},
file = {:home/landry/Dokumente/Mein_BA/Landry_Dokumente/ug1144-petalinux-tools-reference-guide.pdf:pdf},
journal = {Ug1144},
keywords = {PetaLinux,hardware,installation,new proj,setup},
pages = {1--144},
title = {{PetaLinux Tools Documentation Reference Guide}},
url = {https://www.xilinx.com/support/documentation/sw_manuals/xilinx2019_1/ug1144-petalinux-tools-reference-guide.pdf},
volume = {1144},
year = {2020}
}
@book{linuxkernel.,
author = {{Daniel P. Bovet and Marco Cesati}},
file = {:home/landry/Dokumente/Mein_BA/Landry_Dokumente/Understanding Linux Kernel.pdf:pdf},
isbn = {9780596005658},
title = {{Understanding the Linux Kernel}},
year = {2006}
}
@article{Richards2002,
abstract = {Many network protocols are described using the seven layer Open System Interconnection (OSI) model, as shown in Figure 1. The Controller Area Network (CAN) protocol defines the Data Link Layer and part of thePhysical Layer in the OSI model. The remaining physical layer (and all of the higher layers) are not defined by the CAN specification. These other layers can either be defined by the system designer, or they can be implemented using existing non-proprietary Higher Layer Protocols (HLPs) and physical layers.},
author = {Richards, Pat},
file = {:home/landry/Dokumente/Mein_BA/Thesis/Literatur/00228a.pdf:pdf},
journal = {Technology},
pages = {1--12},
title = {{A CAN Physical Layer Discussion}},
year = {2002}
}
@article{Leens2009,
abstract = {Today, at the low end of the communication protocols we fi nd the inter-integrated circuit (I2C) and the serial peripheral interface (SPI) protocols. Both protocols are well suited for communications between integrated circuits for slow communication with on-board peripherals. The two protocols coexist in modern digital electronics systems, and they probably will continue to compete in the future, as both I2C and SPI are actually quite complementary for this kind of communication. {\textcopyright} 2009 IEEE.},
author = {Leens, Fr{\'{e}}d{\'{e}}ric},
doi = {10.1109/MIM.2009.4762946},
file = {:home/landry/Dokumente/Mein_BA/Thesis/Literatur/An_introduction_to_I2C_and_SPI_protocols.pdf:pdf},
issn = {10946969},
journal = {IEEE Instrumentation and Measurement Magazine},
keywords = {Clocks,Data mining,Microcontrollers,Probability density function,Protocols,Synchronization,Wires},
number = {1},
pages = {8--13},
title = {{An introduction to I2C and SPI protocols}},
volume = {12},
year = {2009}
}
@misc{petailinuxtool,
author = {Support, Xilinx},
title = {{Xilinx Support}},
url = {https://support.xilinx.com/s/article/1066813?language=en_US},
year = {2022}
}
@book{Dervis2013,
abstract = {Predicting the binding mode of flexible polypeptides to proteins is an important task that falls outside the domain of applicability of most small molecule and protein−protein docking tools. Here, we test the small molecule flexible ligand docking program Glide on a set of 19 non-$\alpha$-helical peptides and systematically improve pose prediction accuracy by enhancing Glide sampling for flexible polypeptides. In addition, scoring of the poses was improved by post-processing with physics-based implicit solvent MM- GBSA calculations. Using the best RMSD among the top 10 scoring poses as a metric, the success rate (RMSD ≤ 2.0 {\AA} for the interface backbone atoms) increased from 21% with default Glide SP settings to 58% with the enhanced peptide sampling and scoring protocol in the case of redocking to the native protein structure. This approaches the accuracy of the recently developed Rosetta FlexPepDock method (63% success for these 19 peptides) while being over 100 times faster. Cross-docking was performed for a subset of cases where an unbound receptor structure was available, and in that case, 40% of peptides were docked successfully. We analyze the results and find that the optimized polypeptide protocol is most accurate for extended peptides of limited size and number of formal charges, defining a domain of applicability for this approach.},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Derviş, Barış},
booktitle = {Journal of Chemical Information and Modeling},
eprint = {arXiv:1011.1669v3},
file = {:home/landry/Dokumente/Mein_BA/Landry_Dokumente/mastering_embedded_llinux.pdf:pdf},
isbn = {9788578110796},
issn = {1098-6596},
keywords = {icle},
number = {9},
pages = {1689--1699},
pmid = {25246403},
title = {{Mastering Embedded Linux Programming}},
volume = {53},
year = {2013}
}
@misc{XilinxInc.,
author = {{Xilinx Inc.}},
file = {:home/landry/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/ac3d8284f79bb6870bbd0af66d0ea01c0901d4d9.html:html},
title = {zynq-ultrascale-mpsoc},
url = {https://www.xilinx.com/products/silicon-devices/soc/zynq-ultrascale-mpsoc.html}
}
@article{XilinxInc.2019,
author = {{Xilinx Inc.}},
file = {:home/landry/Dokumente/Mein_BA/Landry_Dokumente/Projekt_Edag/Erste_aufgabe/ug1244-zcu106-eval-bd.pdf:pdf},
journal = {Xilinx Technical Documentation},
number = {v1.4},
pages = {1--134},
title = {{ZCU106 Evaluation Board}},
volume = {1244},
year = {2019}
}
@article{HSA.2013,
author = {HSA, Hochschule Augsburg},
keywords = {HSA;Hochschule;Augsburg},
title = {{Kein Titel}},
url = {http://hs-augsburg.de},
year = {2013}
}
@misc{CNXSoftware,
author = {{CNX Software}},
title = {{CNXSoft. Xilinx Introduces Zynq UltraScale+ MPSoC with Cortex A53 and R5 Cores, Ultrascale FPGA}},
url = {https://www.cnx-software.com/2015/03/05/xilinx-introduces-zynq-ultrascale-mpsoc-with-cortex-a53-r5-cores-ultrascale-fpga/}
}
